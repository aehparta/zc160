;******************************************************************************
;
;
; The ZC160 Operating System
;
;
;
; Authors: Antti Partanen, <aehparta@iki.fi>
;
;******************************************************************************


;******************************************************************************
; ZC160 Operating System definitions

; end of line char for strings
EOL                 .equ    $00
; line feed
LF                  .equ    $a
; carriage return
CR                  .equ    $d


;******************************************************************************
; memory constants

OS_STACK            .equ    $77ff
IRAM_START          .equ    $7800
VRAM_START          .equ    $8000

DRAW_X              .equ    $7400
DRAW_Y              .equ    $7402
DRAW_W              .equ    $7404
DRAW_H              .equ    $7406
DRAW_X2             .equ    $7408
DRAW_Y2             .equ    $740a

CURSOR_X            .equ    $7420
CURSOR_Y            .equ    $7421
CURSOR_FLAGS        .equ    $7422

TEXT_POINTER        .equ    $7424

TEMP01              .equ    $74f0
TEMP02              .equ    $74f1
TEMP03              .equ    $74f2
TEMP04              .equ    $74f3

DEBUG_PRINT         .equ    $0000
DEBUG_REGS          .equ    $0002
DEBUG_FLAGS         .equ    $0003

SYSFONT             .equ    $1800


;******************************************************************************
; io-device addresses

; VGA setup latch
IO_VRAM_BANK        .equ    $00
IO_LATCH            .equ    $01


;******************************************************************************
; other
LOGO_TOP            .equ    128
LOGO_LEFT           .equ    160


;******************************************************************************
; memory handling macros

; memset, changes bc, de, hl
.macro memset address, value, size
    ld de, \address
    ld h, d
    ld l, e
    inc de
    ld bc, \size - 1
    ld (hl), \value
    ldir
.endm

; memcpy, changes bc, de, hl
.macro memcpy dst, src, size
    ld de, \dst
    ld hl, \src
    ld bc, \size
    ldir
.endm

; inversed memcpy, copies starting from end of src and dst, changes bc, de, hl
.macro imemcpy dst, src, size
    ld de, \dst + \size - 1
    ld hl, \src + \size - 1
    ld bc, \size
    lddr
.endm


;******************************************************************************
; debug

; debug: start profiling
.macro profile_start
    out (255), a
.endm

; debug: end profiling
.macro profile_end
    out (254), a
.endm

; debug: print registers
.macro debug_print_regs
    ld (DEBUG_REGS), a
.endm

; debug: print register
.macro debug_print_reg register
    ld (DEBUG_PRINT), \register
.endm
